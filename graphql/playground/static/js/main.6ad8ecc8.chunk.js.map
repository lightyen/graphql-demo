{"version":3,"sources":["App.jsx","index.jsx"],"names":["Wrapper","dispatch","useDispatch","settings","useSelector","getSettings","React","useEffect","setSettingsString","JSON","stringify","endpoint","subscriptionEndpoint","store","ReactDOM","render","App","document","getElementById"],"mappings":"sNAOMA,G,OAAU,WACf,IAAMC,EAAWC,wBACXC,EAAWC,sBAAYC,eAO7B,OANAC,IAAMC,WAAU,WACyB,gBAApCJ,EAAS,yBACZA,EAAS,uBAAyB,cAClCF,EAASO,4BAAkBC,KAAKC,UAAUP,EAAU,KAAM,QAEzD,CAACF,EAAUE,IACP,kBAAC,IAAD,CAAYQ,SAAS,WAAWC,qBAAqB,eAG9C,aACd,OACC,kBAAC,WAAD,CAAUC,MAAOA,SAChB,kBAAC,EAAD,QClBHC,IAASC,OAAO,kBAACC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6ad8ecc8.chunk.js","sourcesContent":["import React from \"react\"\nimport { Provider } from \"react-redux\"\nimport Playground, { store, getSettings, setSettingsString } from \"graphql-playground-react\"\nimport { useSelector, useDispatch } from \"react-redux\"\n\nimport \"graphql-playground-react/build/static/css/index.css\"\n\nconst Wrapper = () => {\n\tconst dispatch = useDispatch()\n\tconst settings = useSelector(getSettings)\n\tReact.useEffect(() => {\n\t\tif (settings[\"request.credentials\"] !== \"same-origin\") {\n\t\t\tsettings[\"request.credentials\"] = \"same-origin\"\n\t\t\tdispatch(setSettingsString(JSON.stringify(settings, null, 2)))\n\t\t}\n\t}, [dispatch, settings])\n\treturn <Playground endpoint=\"/graphql\" subscriptionEndpoint=\"/graphql\" />\n}\n\nexport default () => {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Wrapper />\n\t\t</Provider>\n\t)\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}